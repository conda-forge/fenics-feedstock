{% set version = "2019.1.0" %}

package:
  name: fenics-pkgs
  version: {{ version }}

source:
  - url: https://bitbucket.org/fenics-project/dijitso/downloads/dijitso-{{version}}.tar.gz
    sha256: eaa45eec4457f3f865d72a926b7cba86df089410e78de04cd89b15bb405e8fd9
    folder: dijitso
  - url: https://bitbucket.org/fenics-project/ffc/downloads/ffc-{{version}}.tar.gz
    sha256: 4ff821a234869d8b9aaf8c5d7f617d42f9c134a2529e76c9519b681dff35affd
    folder: ffc
    patches:
      - ufc-include-path.patch
  - url: https://bitbucket.org/fenics-project/fiat/downloads/fiat-{{version}}.tar.gz
    sha256: 341a1046cbe0f5f2eb26630c2f71f378b0dca51daf9892a54a2ff193970371e9
    folder: fiat
  - url: https://bitbucket.org/fenics-project/ufl/downloads/ufl-{{version}}.tar.gz
    sha256: 213a56bfa2edb0365909fa6f110f970e582b10a3f5f1fd9a0e85254f1eefaa11
    folder: ufl
  - url: https://bitbucket.org/fenics-project/dolfin/downloads/dolfin-{{version}}.post0.tar.gz
    sha256: 61abdcdb13684ba2a3ba4afb7ea6c7907aa0896a46439d3af7e8848483d4392f
    folder: dolfin

build:
  number: 2
  skip: true  # [win]

outputs:
  - name: fenics-dijitso
    build:
      noarch: python
      script: $PYTHON -m pip install --no-deps ./dijitso
    requirements:
      host:
        - python >=3.5
        - pip
      run:
        - python >=3.5
        - numpy
        - setuptools
      run_constrained:
        - fenics =={{ version }}
    test:
      imports:
        - dijitso

  - name: fenics-fiat
    build:
      noarch: python
      script: $PYTHON -m pip install --no-deps ./fiat
    requirements:
      host:
        - python >=3.5
        - pip
      run:
        - python >=3.5
        - numpy
        - sympy >=1
      run_constrained:
        - fenics =={{ version }}
    test:
      imports:
        - FIAT

  - name: fenics-ufl
    build:
      noarch: python
      script: $PYTHON -m pip install --no-deps ./ufl
    requirements:
      host:
        - python >=3.5
        - pip
      run:
        - python >=3.5
        - setuptools
        - numpy
      run_constrained:
        - fenics =={{ version }}
    test:
      imports:
        - ufl
        - ufl.utils
        - ufl.finiteelement
        - ufl.core
        - ufl.corealg
        - ufl.algorithms

  - name: fenics-ffc
    build:
      noarch: python
      script:
        - $PYTHON -m pip install --no-deps ./ffc
        - mkdir -p $PREFIX/include
        - cp ffc/ffc/backends/ufc/*.h $PREFIX/include/
    requirements:
      host:
        - python >=3.5
        - pip
      run:
        - python >=3.5
        - numpy
        - fenics-dijitso =={{ version }}
        - fenics-fiat =={{ version }}
        - fenics-ufl =={{ version }}
      run_constrained:
        - fenics =={{ version }}
    test:
      imports:
        - ffc
        - ffc.backends
        - ffc.backends.dolfin
        - ffc.backends.ufc
        - ffc.errorcontrol
        - ffc.quadrature
      commands:
        - ffc --help
        - test -f $PREFIX/include/ufc.h
        - test -f $PREFIX/include/ufc_geometry.h

  - name: fenics-libdolfin
    build:
      script: ${RECIPE_DIR}/build-libdolfin.sh
      skip: true  # [win and vc<14]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - libblas
        - libcblas
        - boost-cpp
        - cmake >=3.9
        - eigen
        - hdf5 1.10.4 mpi_{{ mpi }}_*
        - parmetis
        - pkg-config
        - ptscotch
        - suitesparse
        - zlib
        - {{ mpi }}
        - petsc =={{ petsc }}
        - slepc =={{ petsc }}
        - fenics-ffc =={{ version }}
      run:
        - {{ compiler('cxx') }}  # [linux]
        - boost-cpp
        - cmake >=3.9
        - eigen
        - hdf5
        - {{ mpi }}
        - parmetis
        - petsc
        - slepc
        - pkg-config
        - ptscotch
        - suitesparse
        - zlib
        - fenics-ffc =={{ version }}
      run_constrained:
        - fenics =={{ version }}
    test:
      commands:
        - test -f ${PREFIX}/lib/libdolfin${SHLIB_EXT}
        - test -f ${PREFIX}/lib/libdolfin.{{ version }}${SHLIB_EXT}  # [osx]
        - test -f ${PREFIX}/lib/libdolfin${SHLIB_EXT}.{{ version }}  # [linux]

  - name: fenics-dolfin
    build:
      script: ${RECIPE_DIR}/build-dolfin.sh
      skip: true  # [win or py2k]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - libblas
        - libcblas
        - python
        - pip
        - cmake >=3.9
        - pkgconfig
        - {{ mpi }}
        - mpi4py
        - petsc4py =={{ petsc }}
        - slepc4py =={{ petsc }}
        - numpy
        - pybind11
        - six
        - sympy >=1
        - {{ pin_subpackage("fenics-libdolfin", exact=True) }}
        - fenics-dijitso =={{ version }}
        - fenics-fiat =={{ version }}
        - fenics-ufl =={{ version }}
        - fenics-ffc =={{ version }}
      run:
        - {{ compiler('cxx') }}  # [linux]
        - python
        - setuptools
        - {{ mpi }}
        - mpi4py
        - petsc
        - petsc4py
        - slepc
        - slepc4py
        - pkgconfig  # Python pkgconfig package
        - pybind11
        - {{ pin_compatible('numpy', max_pin=None) }}
        - six
        - sympy >=1
        - {{ pin_subpackage("fenics-libdolfin", exact=True) }}
        - fenics-dijitso =={{ version }}
        - fenics-fiat =={{ version }}
        - fenics-ufl =={{ version }}
        - fenics-ffc =={{ version }}
      run_constrained:
        - fenics =={{ version }}

    test:
      commands:
        - bash ${RECIPE_DIR}/parent/test-dolfin.sh
      source_files:
        - dolfin/python/test

      requires:
        - nose
        - pytest
        - git
        - decorator

      imports:
        - dolfin

  - name: fenics
    build:
      skip: true  # [win or py2k]
      script: "echo 1"
    requirements:
      host:
        - python
      run:
        - python
        - fenics-dijitso =={{ version }}
        - fenics-fiat =={{ version }}
        - fenics-ufl =={{ version }}
        - fenics-ffc =={{ version }}
        - {{ pin_subpackage('fenics-dolfin', exact=True) }}
    test:
      imports:
        - dolfin

about:
  home: http://www.fenicsproject.org
  license: LGPL 3.0
  license_file: dolfin/COPYING.LESSER
  summary: 'FEniCS is a collection of free software for automated, efficient solution of differential equations'

  description: |
    FEniCS is a collection of free software for automated, efficient solution of differential equations
    (<http://fenicsproject.org>). It provides C++ and Python interfaces, and creates effecient solvers via
    expression of finite variational statements in a domain-specific language that are transformed and
    just-in-time compiled into efficient implementations.
  doc_url: http://fenics.readthedocs.io/
  dev_url: https://bitbucket.org/fenics-project/

extra:
  recipe-maintainers:
    - garth-wells
    - johannesring
    - mikaem
    - minrk
